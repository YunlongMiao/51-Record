C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: D:\EN\C51\BIN\C51.EXE 11.24c\iic.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listin
                    -gs\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          #include"iic.h"
   2          #include"lcd12864.h"
   3          
   4          static uchar code year_code[255]={
   5          0x04,0xBA,0x53,0x0A,0x5B,0x48,0x65,0x2B,0xBC, // 2015-2017
   6          0x05,0x2B,0x50,0x0A,0x93,0x45,0x47,0x4A,0xB9, // 2018-2020
   7          0x06,0xAA,0x4C,0x0A,0xd5,0x41,0x24,0xdA,0xB6, // 2021-2023
   8          0x04,0xB6,0x4A,0x69,0x57,0x3d,0x0A,0x4e,0x51, // 2024-2026
   9          0x0d,0x26,0x46,0x5e,0x93,0x3A,0x0d,0x53,0x4d, // 2027-2029
  10          0x05,0xAA,0x43,0x36,0xB5,0x37,0x09,0x6d,0x4B, // 2030-2032
  11          0xB4,0xAe,0xBf,0x04,0xAd,0x53,0x0A,0x4d,0x48, // 2033-2035
  12          0x6d,0x25,0xBC,0x0d,0x25,0x4f,0x0d,0x52,0x44, // 2036-2038
  13          0x5d,0xAA,0x38,0x0B,0x5A,0x4C,0x05,0x6d,0x41, // 2039-2041
  14          0x24,0xAd,0xB6,0x04,0x9B,0x4A,0x7A,0x4B,0xBe, // 2042-2044
  15          0x0A,0x4B,0x51,0x0A,0xA5,0x46,0x5B,0x52,0xBA, // 2045-2047
  16          0x06,0xd2,0x4e,0x0A,0xdA,0x42,0x35,0x5B,0x37, // 2048-2050
  17          0x09,0x37,0x4B,0x84,0x97,0xC1,0x04,0x97,0x53, // 2051-2053
  18          0x06,0x4B,0x48,0x66,0xA5,0x3C,0x0e,0xA5,0x4f, // 2054-2056
  19          0x06,0xB2,0x44,0x4A,0xB6,0x38,0x0A,0xAe,0x4C, // 2057-2059
  20          0x09,0x2e,0x42,0x3C,0x97,0x35,0x0C,0x96,0x49, // 2060-2062
  21          0x7d,0x4A,0xBd,0x0d,0x4A,0x51,0x0d,0xA5,0x45, // 2063-2065
  22          0x55,0xAA,0xBA,0x05,0x6A,0x4e,0x0A,0x6d,0x43, // 2066-2068
  23          0x45,0x2e,0xB7,0x05,0x2d,0x4B,0x8A,0x95,0xBf, // 2069-2071
  24          0x0A,0x95,0x53,0x0B,0x4A,0x47,0x6B,0x55,0x3B, // 2072-2074
  25          0x0A,0xd5,0x4f,0x05,0x5A,0x45,0x4A,0x5d,0x38, // 2075-2077
  26          0x0A,0x5B,0x4C,0x05,0x2B,0x42,0x3A,0x93,0xB6, // 2078-2080
  27          0x06,0x93,0x49,0x77,0x29,0xBd,0x06,0xAA,0x51, // 2081-2083
  28          0x0A,0xd5,0x46,0x54,0xdA,0xBA,0x04,0xB6,0x4e, // 2084-2086
  29          0x0A,0x57,0x43,0x45,0x27,0x38,0x0d,0x26,0x4A, // 2087-2089
  30          0x8e,0x93,0x3e,0x0d,0x52,0x52,0x0d,0xAA,0x47, // 2090-2092
  31          0x66,0xB5,0x3B,0x05,0x6d,0x4f,0x04,0xAe,0x45, // 2093-2095
  32          0x4A,0x4e,0xB9,0x0A,0x4d,0x4C,0x0d,0x15,0x41, // 2096-2098
  33          0x2d,0x92,0xB5, // 2099
  34          };
  35          
  36                
  37          void delay()        //延时应大于4.7us
  38          { ;;;}
  39          
  40          
  41          void delay1(uint n) //ms
  42          { 
  43   1        uint i,y; 
  44   1        for(i=n;i>0;i--) 
  45   1          for(y=114;y>0;y--); 
  46   1      }
  47          
  48          void start()        //开始发送数据
  49          {  
  50   1         sda=1;
  51   1         delay();         //scl在高电平期间，sda由高到低
  52   1         scl=1;
  53   1         delay();
  54   1         sda=0;
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 2   

  55   1         delay();
  56   1      }
  57          
  58          void stop()           //停止发送数据
  59          {  sda=0;             //scl在高电平期间，sda由高到低
  60   1         delay();
  61   1         scl=1;
  62   1         delay();
  63   1         sda=1;
  64   1         delay();
  65   1      }
  66          
  67          
  68          void response()//主机检测从机的应答信号
  69          { uchar i;
  70   1      sda = 1;
  71   1      scl=1;
  72   1      delay();
  73   1      while((sda==1)&&i<250) i++; //应答sda为0，非应答为1
  74   1      scl=0; //释放总线
  75   1      delay();
  76   1      }
  77          void ack()
  78          {
  79   1         sda=0;
  80   1         delay();
  81   1         scl=1;
  82   1         delay();
  83   1         scl=0;
  84   1         delay();
  85   1         sda=1;
  86   1         delay();
  87   1      }
  88          void noack()
  89          {
  90   1         sda=1;
  91   1         delay();
  92   1         scl=1;
  93   1         delay();
  94   1         scl=0;
  95   1         delay();
  96   1      
  97   1      }
  98          
  99          
 100          
 101          void write_byte(uchar date)     //写一个字节
 102          {
 103   1         uchar i,temp;
 104   1         temp=date;
 105   1         for(i=0;i<8;i++)
 106   1         {  
 107   2            scl=0;                    //scl上跳沿写入
 108   2            delay();
 109   2            sda=temp&0x80;                   
 110   2            delay();
 111   2            scl=1;
 112   2            delay();
 113   2            temp=temp<<1;
 114   2            scl=0;
 115   2            delay();
 116   2         }
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 3   

 117   1           sda=1;
 118   1           delay();
 119   1      }
 120          
 121          uchar read_byte()
 122          {  
 123   1         uchar i,k;
 124   1         scl=0;
 125   1         delay();
 126   1         sda=1;
 127   1         delay();
 128   1         for(i=0;i<8;i++)
 129   1         {
 130   2            scl=1;
 131   2            delay();
 132   2            k=k<<1;
 133   2            if(sda)
 134   2              k=k|0x01;
 135   2            scl=0;
 136   2            delay();
 137   2         }
 138   1         return k;
 139   1      }
 140          
 141          void write_add(uchar address,uchar date)
 142          {  
 143   1         uchar temp;
 144   1      //    if(ss)
 145   1      //      temp=0xa2;
 146   1      //    else
 147   1            temp=0xa0;
 148   1         start();
 149   1         write_byte(temp);                    //设备地址
 150   1         response();
 151   1         write_byte(address);
 152   1         response();
 153   1         write_byte(date);//由于最大寻址为256，所以512字节每次写入2字节
 154   1         response();
 155   1          delay1(10);
 156   1         stop();
 157   1      }
 158          
 159          uchar read_add(uchar address, uchar ss)
 160          {
 161   1         uchar temp;
 162   1         uchar date;
 163   1        if(ss)
 164   1          temp=0xa2;
 165   1        else
 166   1          temp=0xa0;
 167   1         start();
 168   1         write_byte(temp);
 169   1         response();
 170   1         write_byte(address);
 171   1         response();
 172   1         start();
 173   1         write_byte(temp+1);                //1表示接收地址
 174   1         response();
 175   1         date=read_byte();
 176   1           noack();
 177   1           stop();
 178   1           return date;
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 4   

 179   1         
 180   1      }
 181          //void  write_24cxx(unsigned char addr,unsigned char *buff,unsigned char num)//写入一串数据
 182          //{
 183          //   start();
 184          //   write_byte(0xa0);                    //设备地址
 185          //   response();
 186          //   write_byte(addr);
 187          //   response();
 188          //  while(num--)
 189          //  {
 190          //    write_byte(*buff++);
 191          //    response();
 192          //    delay1(10);//10ms
 193          //  }
 194          //  stop();
 195          //}
 196          
 197          
 198          //void  read_24cxx(unsigned char addr,unsigned char *buff,unsigned char num)//读入一串数据
 199          //{
 200          //   unsigned int i;
 201          //   unsigned char temp;
 202          //   start();
 203          //   write_byte(0xa0);
 204          //   response();
 205          //   write_byte(addr);
 206          //   response();
 207          //   start();
 208          //   write_byte(0xa1);                //1表示接收地址
 209          //   response();
 210          //   while(num--)
 211          //   {
 212          //      *buff++=read_byte();
 213          //      buff[i]=temp;
 214          //      if(num)
 215          //        ack();
 216          //      else
 217          //        noack();
 218          //    }
 219          //    stop();
 220          //}
 221          //void  write_24cxx(unsigned char addr,unsigned char *buff,unsigned char num)//写入一串数据
 222          //{
 223          //  unsigned int i;
 224          //  for(i=0;i<num;i++)
 225          //  {
 226          //    write_add(addr++,buff[i],1);
 227          //    delay1(10);//10ms
 228          //  }
 229          //  stop();
 230          //}
 231          
 232          
 233          //void  read_24cxx(unsigned char addr,unsigned char *buff,unsigned char num)//读入一串数据
 234          //{
 235          //  unsigned int i;
 236          //  unsigned char temp;
 237          //  for(i=0;i<num;i++)
 238          //  {
 239          //    temp=read_add(addr++,1);
 240          //    buff[i]=temp;
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 5   

 241          //    if(i==num-1)
 242          //      noack();
 243          //    else
 244          //      ack();
 245          //  }
 246          //}
 247          //uchar AT24C02_Write(unsigned char WriteAddr,unsigned char *buffer) 
 248          //{ 
 249          //    unsigned short int BufSize = strlen(buffer); //获取要写入的字符串长度
 250          //    if((Max_Addr-WriteAddr) < BufSize) //空间不足返回0 
 251          //      return 0; 
 252          //    start(); //发I2C起始信号
 253          //    write_byte(0XA0); //写器件地址
 254          //    response(); //等待应答信号
 255          //    write_byte(WriteAddr); //发送地址
 256          //    response(); //等待应答信号
 257          //    while(*buffer++ != 0) 
 258          //    { 
 259          //        write_byte(*buffer); //发送数据
 260          //        response(); //等待应答信号
 261          //        WriteAddr++; //写入地址加1 
 262          //        if(WriteAddr % Page_Byte == 0) //新的一页
 263          //        { 
 264          //            stop(); 
 265          //            delay1(6);// AT24C02的写入周期是5ms,延时一定要大于或者等于5ms 
 266          //            start();
 267          //            write_byte(0XA0); 
 268          //            response(); //等待应答信号
 269          //            write_byte(WriteAddr); //发送地址
 270          //            response(); //等待应答信号
 271          //        } 
 272          //    } 
 273          //    stop();
 274          //    delay1(6);
 275          //    return 1; 
 276          //}
 277          //void main()
 278          //{
 279          //  int k,j,a,b,c;
 280          //  initial_12864();
 281          ////   uchar kk;
 282          
 283          ////  k=0;
 284          //////   
 285          ////   write_add(0x00,0x41,0);               //向0单元写入数据0fH，
 286          ////  delay1(10);
 287          ////  write_add(0x01,0x42,0);
 288          ////  delay1(10);
 289          //// write_add(0x02,0x043,0);
 290          ////  delay1(10);
 291          //// write_add(0x03,0x044,0);
 292          ////  delay1(10);
 293          //// write_add(4,0x045,0);
 294          ////   delay1(10);
 295          ////   
 296          //  k=read_add(255,0);
 297          ////  delay1(10);
 298          //  j=read_add(256,1);
 299          //  a=read_add(257,1);
 300          ////  b=read_add(0x03,0);
 301          ////  c=read_add(4,0);
 302          ////  LCD_Setaddress(1,1);
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 6   

 303          ////  write_data(k);
 304          ////  write_data(j);
 305          ////  write_data(a);
 306          ////  write_data(b);
 307          ////  write_data(c);
 308          ////  write_data(0x30+kk/10);
 309          ////    write_data(0x30+kk%10);
 310          //    write_data(0x30+k/100);
 311          //    write_data(0x30+(k/10)%10);
 312          //    write_data(0x30+k%10);
 313          //    write_data(0x30+j/100);
 314          //    write_data(0x30+(j/10)%10);
 315          //    write_data(0x30+j%10);
 316          //    write_data(0x30+a/100);
 317          //    write_data(0x30+(a/10)%10);
 318          //    write_data(0x30+a%10);
 319          ////    P1=read_add(kk,0);                  //低电平灯亮
 320          ////  write_24cxx(0x00,sum,7);
 321          ////  delay1(2000);
 322          ////  AT24C02_Write(0x10,sum);
 323          ////  delay1(2000);
 324          ////  read_24cxx(0x00,num1,7);
 325          ////  read_24cxx(0x10,num2,7);
 326          ////   LCD_Setaddress(1,1);
 327          ////    for(kk=0; kk<7; kk++)
 328          ////    write_data(0x30+num1[kk]);
 329          ////  LCD_Setaddress(2,1);
 330          ////    for(kk=0; kk<7; kk++)
 331          ////    write_data(0x30+num2[kk]);
 332          //    while(1);
 333          // 
 334          //  
 335          //}
 336          //void write_add(uchar address,uchar date, uchar ss)
 337          //{  
 338          //   start();
 339          //   write_byte(0xa0);                    //设备地址
 340          //   response();
 341          //   write_byte(address);
 342          //   response();
 343          //   write_byte(date);
 344          //   response();
 345          //   if(ss==0)
 346          //    stop();
 347          //}
 348          ////uchar year_code[507]597
 349          void main()
 350          {
 351   1        int i,j=0;
 352   1        initial_12864();
 353   1      //for(i=0;i<256; i++)
 354   1      //  {
 355   1      //    write_add(i,year_code[i]);
 356   1      //    delay1(10);
 357   1      //  }
 358   1      //  write_add(0,103);//read_add
 359   1      //  delay1(10);
 360   1      //  write_add(122,108);
 361   1      //  delay1(10);
 362   1      //  write_add(12,210);
 363   1      //  delay1(10);
 364   1        
C51 COMPILER V9.60.0.0   IIC                                                               03/13/2022 20:37:07 PAGE 7   

 365   1        Show_number(0x80,read_add(0,0));
 366   1        Show_number(0x90,read_add(1,0));
 367   1        Show_number(0x88,read_add(2,0));
 368   1        for(i=0;i<256; i++)
 369   1        {
 370   2          Show_number(0x80,read_add(i,0));
 371   2          Show_number(0x90,year_code[i]);
 372   2          if(read_add(i,0)==year_code[i])
 373   2          j++;
 374   2          Show_number(0x88,j);
 375   2          delay1(1000);
 376   2        }
 377   1        while(1);
 378   1      }
 379          
 380          
 381          //void main()
 382          //{
 383          //  int i;
 384          //  initial_12864();
 385          //    
 386          //  
 387          //}
 388          
 389          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    489    ----
   CONSTANT SIZE    =    255    ----
   XDATA SIZE       =   ----       5
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
