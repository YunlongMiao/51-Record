C51 COMPILER V9.60.0.0   FIN_IIC                                                           03/19/2022 17:01:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE FIN_IIC
OBJECT MODULE PLACED IN .\Objects\Fin_iic.obj
COMPILER INVOKED BY: D:\EN\C51\BIN\C51.EXE Fin_iic.c LARGE OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -Fin_iic.lst) TABS(2) OBJECT(.\Objects\Fin_iic.obj)

line level    source

   1          #include"Fin_iic.h"
   2          
   3          
   4                
   5          void delay()        //延时应大于4.7us
   6          { ;;;}
   7          
   8          
   9          void delay1(uint n) //ms
  10          { 
  11   1        uint i,y; 
  12   1        for(i=n;i>0;i--) 
  13   1          for(y=114;y>0;y--); 
  14   1      }
  15          
  16          void start()        //开始发送数据
  17          {  
  18   1         sda=1;
  19   1         delay();         //scl在高电平期间，sda由高到低
  20   1         scl=1;
  21   1         delay();
  22   1         sda=0;
  23   1         delay();
  24   1      }
  25          
  26          void stop()           //停止发送数据
  27          {  sda=0;             //scl在高电平期间，sda由高到低
  28   1         delay();
  29   1         scl=1;
  30   1         delay();
  31   1         sda=1;
  32   1         delay();
  33   1      }
  34          
  35          
  36          void response()//主机检测从机的应答信号
  37          { uchar i;
  38   1      sda = 1;
  39   1      scl=1;
  40   1      delay();
  41   1      while((sda==1)&&i<250) i++; //应答sda为0，非应答为1
  42   1      scl=0; //释放总线
  43   1      delay();
  44   1      }
  45          
  46          void noack()
  47          {
  48   1         sda=1;
  49   1         delay();
  50   1         scl=1;
  51   1         delay();
  52   1         scl=0;
  53   1         delay();
  54   1      
C51 COMPILER V9.60.0.0   FIN_IIC                                                           03/19/2022 17:01:55 PAGE 2   

  55   1      }
  56          
  57          
  58          
  59          void write_byte(uchar date)     //写一个字节
  60          {
  61   1         uchar i,temp;
  62   1         temp=date;
  63   1         for(i=0;i<8;i++)
  64   1         {  
  65   2            scl=0;                    //scl上跳沿写入
  66   2            delay();
  67   2            sda=temp&0x80;                   
  68   2            delay();
  69   2            scl=1;
  70   2            delay();
  71   2            temp=temp<<1;
  72   2            scl=0;
  73   2            delay();
  74   2         }
  75   1           sda=1;
  76   1           delay();
  77   1      }
  78          
  79          uchar read_byte()
  80          {  
  81   1         uchar i,k;
  82   1         scl=0;
  83   1         delay();
  84   1         sda=1;
  85   1         delay();
  86   1         for(i=0;i<8;i++)
  87   1         {
  88   2            scl=1;
  89   2            delay();
  90   2            k=k<<1;
  91   2            if(sda)
  92   2              k=k|0x01;
  93   2            scl=0;
  94   2            delay();
  95   2         }
  96   1         return k;
  97   1      }
  98          
  99          uchar read_add(uchar address, uchar ss)
 100          {
 101   1         uchar temp;
 102   1         uchar date;
 103   1        if(ss)
 104   1          temp=0xa2;
 105   1        else
 106   1          temp=0xa0;
 107   1         start();
 108   1         write_byte(temp);
 109   1         response();
 110   1         write_byte(address);
 111   1         response();
 112   1         start();                             
 113   1         write_byte(temp+1);                //1表示接收地址
 114   1         response();
 115   1         date=read_byte();
 116   1           noack();
C51 COMPILER V9.60.0.0   FIN_IIC                                                           03/19/2022 17:01:55 PAGE 3   

 117   1           stop();
 118   1           return date;
 119   1         
 120   1      }
 121          void write_add(uchar address,uchar date, uchar ss)
 122          {  
 123   1         uchar temp;
 124   1          if(ss)
 125   1            temp=0xa2;
 126   1          else
 127   1            temp=0xa0;
 128   1         start();
 129   1         write_byte(temp);                    //设备地址
 130   1         response();
 131   1         write_byte(address);
 132   1         response();
 133   1         write_byte(date);
 134   1         response();
 135   1          delay1(10);
 136   1         stop();
 137   1      }
 138          uchar year_code(uchar ss)
 139          {
 140   1        uchar mm;
 141   1        ss=ss-342;//21,363
 142   1      //  if(ss>=255)
 143   1      //      mm=read_add(ss-256,1);
 144   1      //  else
 145   1            mm=read_add(ss,0);
 146   1      //  if(ss==363)
 147   1      //    mm=0x0a;
 148   1      //  else if(ss==364)
 149   1      //    mm=0xd5;
 150   1      //  else
 151   1      //    mm=0x41;
 152   1        return mm;
 153   1      }
 154          
 155          
 156          
 157          
 158          
 159          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    287    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
